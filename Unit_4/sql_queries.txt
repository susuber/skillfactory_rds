-- dsp_project
-- 4.1 База данных содержит список аэропортов практически всех
-- крупных городов России. В большинстве городов есть только один аэропорт. Исключение составляет:

SELECT p.city,
       count(p.airport_code) AS count_airport
FROM dst_project.airports AS p
GROUP BY p.city
ORDER BY 2 DESC,
         1 


-- 4.2.1 Таблица рейсов содержит всю информацию о прошлых,
-- текущих и запланированных рейсах. Сколько всего статусов для рейсов определено в таблице?

SELECT count(DISTINCT f.status)
FROM dst_project.flights AS f 


-- 4.2.2 Какое количество самолетов находятся в воздухе на
-- момент среза в базе (статус рейса «самолёт уже вылетел и находится в воздухе»).

SELECT count(f.status)
FROM dst_project.flights AS f
WHERE f.status = 'Departed' 


-- 4.2.3 Места определяют схему салона каждой модели.
-- Сколько мест имеет самолет модели  (Boeing 777-300)?

  SELECT count(s.seat_no)
  FROM dst_project.seats AS s WHERE s.aircraft_code = '773' 
  

-- 4.2.4 Сколько состоявшихся (фактических) рейсов было
-- совершено между 1 апреля 2017 года и 1 сентября 2017 года?

  SELECT count(*)
  FROM dst_project.flights f WHERE f.actual_arrival BETWEEN '2017-04-01' AND '2017-09-01'
  AND f.status = 'Arrived' 
  
  
-- 4.3.1 Сколько всего рейсов было отменено по данным базы?

  SELECT count(*)
  FROM dst_project.flights f WHERE f.status = 'Arrived' 
  
  
-- 4.3.2 Сколько самолетов моделей типа Boeing, Sukhoi Superjet,
-- Airbus находится в базе авиаперевозок?

  SELECT 'Boeing',
         count(*)
  FROM dst_project.aircrafts AS a WHERE a.model like 'Boeing%'
UNION ALL
SELECT 'Sukhoi Superjet',
       count(*)
FROM dst_project.aircrafts AS a
WHERE a.model like 'Sukhoi Superjet%'
UNION ALL
SELECT 'Airbus',
       count(*)
FROM dst_project.aircrafts AS a
WHERE a.model like 'Airbus%' 


-- 4.3.3 В какой части (частях) света находится больше аэропортов?

  SELECT 'Asia',
         count(*)
  FROM dst_project.airports AS a WHERE a.timezone like 'Asia%'
UNION ALL
SELECT 'Europe',
       count(*)
FROM dst_project.airports AS a
WHERE a.timezone like 'Europe%'
UNION ALL
SELECT 'Australia',
       count(*)
FROM dst_project.airports AS a
WHERE a.timezone like 'Australia%' 


-- 4.3.4 У какого рейса была самая большая задержка прибытия за все время сбора данных?
-- Введите id рейса (flight_id).

  SELECT f.flight_id,
         (f.actual_arrival - f.scheduled_arrival) AS delay_time
  FROM dst_project.flights AS f WHERE f.actual_arrival IS NOT NULL
ORDER BY delay_time DESC
LIMIT 1 


-- 4.4.1 Когда был запланирован самый первый вылет, сохраненный в базе данных?

SELECT f.scheduled_departure
FROM dst_project.flights f
ORDER BY 1
LIMIT 1 


-- 4.4.2 Сколько минут составляет запланированное время полета в самом длительном рейсе?

SELECT date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure) AS flight_time
FROM dst_project.flights AS f
ORDER BY flight_time DESC
LIMIT 1 


-- 4.4.3 Между какими аэропортами пролегает самый длительный по времени запланированный рейс?

SELECT f.departure_airport AS departure,
       f.arrival_airport AS arrival,
       date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure) AS flight_time
FROM dst_project.flights AS f
GROUP BY departure,
         arrival,
         flight_time
HAVING (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)) = 530 


-- 4.4.4 Сколько составляет средняя дальность полета среди всех самолетов в минутах?
-- Секунды округляются в меньшую сторону (отбрасываются до минут).

SELECT avg(date_part('hour', f.actual_arrival - f.actual_departure) * 60 + date_part('minute', f.actual_arrival - f.actual_departure))
FROM dst_project.flights AS f 


-- 4.5.1 Мест какого класса у SU9 больше всего?

SELECT s.fare_conditions AS service_class,
       count(s.seat_no)
FROM dst_project.seats AS s
WHERE s.aircraft_code = 'SU9'
GROUP BY service_class 


-- 4.5.2 Какую самую минимальную стоимость составило бронирование за всю историю?

SELECT min(b.total_amount)
FROM dst_project.bookings AS b 


-- 4.5.3 Какой номер места был у пассажира с id = 4313 788533?

SELECT b.seat_no
FROM dst_project.tickets AS t
JOIN dst_project.boarding_passes AS b ON t.ticket_no = b.ticket_no
WHERE t.passenger_id = '4313 788533' 


-- 5.1.1 Анапа — курортный город на юге России. Сколько рейсов прибыло в Анапу за 2017 год?

SELECT count(f.flight_id)
FROM dst_project.flights AS f WHERE f.arrival_airport = 'AAQ'
AND (date_part('year', f.actual_departure) = 2017)
AND f.status != 'Cancelled' 


-- 5.1.2 Сколько рейсов из Анапы вылетело зимой 2017 года?

SELECT count(f.flight_id)
FROM dst_project.flights AS f WHERE f.departure_airport = 'AAQ'
AND (date_part('year', f.actual_departure) = 2017)
AND (date_part('month', f.actual_departure) IN (12, 1, 2))
												  
												  
-- 5.1.3 Посчитайте количество отмененных рейсов из Анапы за все время.

  SELECT count(f.status)
  FROM dst_project.flights AS f WHERE f.status = 'Cancelled'
  AND f.departure_airport = 'AAQ' 
  
  
-- 5.1.4 Сколько рейсов из Анапы не летают в Москву?-- 5.1.4 Сколько рейсов из Анапы не летают в Москву?

  SELECT count(DISTINCT flight_id)
  FROM dst_project.flights AS f
  JOIN dst_project.airports AS a1 ON a1.airport_code = f.departure_airport
  JOIN dst_project.airports AS a2 ON a2.airport_code = f.arrival_airport WHERE a1.city = 'Anapa'
  AND NOT a2.city = 'Moscow' 
  
  
-- 5.1.5 Какая модель самолета летящего на рейсах из Анапы имеет больше всего мест?

SELECT a.model AS model_aircraft,
       count(f.flight_id) AS count_flight
FROM dst_project.flights AS f
JOIN dst_project.aircrafts a ON a.aircraft_code = f.aircraft_code WHERE departure_airport = 'AAQ'
GROUP BY model_aircraft
ORDER BY count_flight DESC
LIMIT 1 


-- Итоговый проект

/* Для решения поставленной задачи в первую очередь требуется сформировать датасет из меющихся данных.
Т.к. анализ данных проше и удобние производить инструментами предназначенными для решения данных задач,
то не следует усложнять запрос (что может привести к появлению ошибок), а просто выбрать представлющие
интерес данные в один датасет и выгрузить его.
На мой взгляд наилучшим методом будет проход по всем табицам с выбором нужных столбцов, с последуюшей
сортировкой их поусловию (январь, февраль, декабрь 2017г.) и группировкой по рейсам */

SELECT 
-- таблицы Бронирования, Билеты,Места и Посадочные талоны для решения данной задачи не имеют интереса
-- Сначала выберем данные для улитающих самолетов, потом для прилетающих и объеденим
 
 -- выбираем столбцы из таблицы Перелеты
 sum(tf.amount) AS flight_cost,
 count(tf.ticket_no) AS total_seat, -- для определения заполняемости всамолетов
 
 -- выбираем столбцы из таблицы Рейсы
 f.flight_id,
 f.scheduled_arrival,
 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)) AS scheduled_time,
 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)) AS real_time, 
 
 -- выбираем столбцы из таблицы Аэропорты
 p.city AS city, 
 
 -- выбираем столбцы из таблицы Самолеты
 a.model
FROM 
-- обьеденение таблиц будем осуществлять от таблицы Рейсs методом left join
-- чтобы не потерять информацию о рейсах, в случае не полного соответствия таблиц
	dst_project.flights AS f
LEFT JOIN dst_project.aircrafts AS a ON f.aircraft_code = a.aircraft_code
LEFT JOIN dst_project.airports AS p ON p.airport_code = f.arrival_airport
LEFT JOIN dst_project.ticket_flights AS tf ON tf.flight_id = f.flight_id 

WHERE f.departure_airport = 'AAQ'
  AND f.status != 'Cancelled'
  AND (date_part('year', f.actual_departure) = 2017)
  AND (date_part('month', f.actual_departure) IN (12, 1, 2))-- производим группировку
GROUP BY f.flight_id,
         f.scheduled_arrival,
         p.city, 
		 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)), 
		 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)),
		 a.model
UNION ALL
SELECT sum(tf.amount) AS flight_cost,
       count(tf.ticket_no) AS total_seat, -- для определения заполняемости всамолетов
 -- выбираем столбцы из таблицы Рейсы
 f.flight_id,
 f.scheduled_arrival,
 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)) AS scheduled_time,
 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)) AS real_time, 
 -- выбираем столбцы из таблицы Аэропорты
 p.city AS city, 
-- выбираем столбцы из таблицы Самолеты
 a.model
FROM 
-- обьеденение таблиц будем осуществлять от таблицы Рейсs методом left join
-- чтобы не потерять информацию о рейсах, в случае не полного соответствия таблиц
	dst_project.flights AS f
LEFT JOIN dst_project.aircrafts AS a ON f.aircraft_code = a.aircraft_code
LEFT JOIN dst_project.airports AS p ON p.airport_code = f.departure_airport
LEFT JOIN dst_project.ticket_flights AS tf ON tf.flight_id = f.flight_id 


WHERE f.arrival_airport = 'AAQ'
  AND f.status != 'Cancelled'
  AND (date_part('year', f.actual_departure) = 2017)
  AND (date_part('month', f.actual_departure) IN (12, 1, 2))-- производим группировку
GROUP BY f.flight_id,
         f.scheduled_arrival,
         p.city, 
		 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)), 
		 (date_part('hour', f.scheduled_arrival - f.scheduled_departure) * 60 + date_part('minute', f.scheduled_arrival - f.scheduled_departure)), 
		 a.model
